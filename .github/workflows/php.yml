name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wishwell/backend
    steps:
    - uses: actions/checkout@v3
    - name: Set up PHP
      uses: shivammathur/setup-php@v2

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-
    
    - name: Install dependencies
      working-directory: wishwell/backend
      run: composer install --prefer-dist --no-progress
    - name: Generate key
      working-directory: wishwell/backend/
      run: php artisan key:generate
      
    - name: Execute tests (Unit and Feature test) via PHPUnit
      working-directory: wishwell/backend
      run: vendor/bin/phpunit --coverage-clover=coverage.xml

      
    - name: Create coverage artifact
      uses: actions/upload-artifact@v2
      with:
          name: coverage-report
          path: wishwell/backend/coverage.xml
          
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      with:
          projectBaseDir:  wishwell/backend
          args: >
              -Dsonar.projectKey=ajayingale12345_wishwellFinal
              -Dsonar.projectName=wishwellFinal
              -Dsonar.organization=ajayingale12345
              -Dsonar.sources=.
              -Dsonar.projectVersion=2.0
              -Dsonar.php.coverage.reportPaths=coverage.xml 
  
      env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
                
    - name: Send notification to slack from github using githubaction
      uses: slackapi/slack-github-action@v1.25.0
      with:
         payload: |
          {
           "text": "Sonar Analysis done "
           }
      env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL}}
            

  trivy_scan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: wishwell/backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install PHP
        uses: shivammathur/setup-php@v2

      - name: Install Composer dependencies
        run: composer install --no-dev --ignore-platform-reqs

      - name: Install Trivy
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install trivy
     
        
      - name: Scan PHP dependencies with Trivy
        run: |
          trivy dependency-scan --file composer.lock --type composer --format json > trivy_report.json

      - name: Create coverage artifact
        
        uses: actions/upload-artifact@v2
        with:
          projectBaseDir:  wishwell/backend
          name: Trivy-report
          path: wishwell/backend/trivy_report.json

   


